@model ProductCreateDto

@{
    ViewBag.SizeCount = 0;
}

<div class="col-md-6 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <p class="card-description">
                Məhsul yarat
            </p>
            <form method="post" class="forms-sample" enctype="multipart/form-data">

                <div class="text-danger" asp-validation-summary="ModelOnly"></div>

                <div class="form-group">

                    <input asp-for="@Model.ProductDetails[0].LanguageId" value="1" type="hidden" />
                    <div class="form-group">
                        <label for="exampleInputUsername1 ">Azərbaycanca ad</label>
                        <input class="form-control productName" required asp-for="@Model.ProductDetails[0].Name" placeholder="Başlıq daxil edin">
                        <span asp-validation-for="@Model.ProductDetails[0].Name" class="text-danger"></span>
                    </div>


                    <div class="form-group">
                        <label for="exampleInputUsername1 ">Azərbaycanca açıqlama</label>
                        <textarea class="form-control productDescription" id="description0" asp-for="@Model.ProductDetails[0].Description" placeholder="Açıqlama daxil edin"></textarea>
                        <span asp-validation-for="@Model.ProductDetails[0].Description" class="text-danger"></span>
                    </div>



                    <div class="form-group">
                        <input class=" sameDataInput" id="checkbox" type="checkbox">
                        <label for="checkbox">Bütün dillərdə eyni olsun</label>
                    </div>

                </div>

                <hr />
                <br />
                <br />

                <div class="form-group">

                    <input asp-for="@Model.ProductDetails[1].LanguageId" value="2" type="hidden" />
                    <div class="form-group">
                        <label for="exampleInputUsername1 ">İngiliscə ad</label>
                        <input class="form-control productName" required asp-for="@Model.ProductDetails[1].Name" placeholder="Başlıq daxil edin">
                        <span asp-validation-for="@Model.ProductDetails[1].Name" class="text-danger"></span>
                    </div>


                    <div class="form-group">
                        <label for="exampleInputUsername1 ">İngiliscə açıqlama</label>
                        <textarea class="form-control productDescription" id="description1" asp-for="@Model.ProductDetails[1].Description" placeholder="Açıqlama daxil edin"></textarea>
                        <span asp-validation-for="@Model.ProductDetails[1].Description" class="text-danger"></span>
                    </div>


                </div>

                <hr />
                <br />
                <br />

                <div class="form-group">

                    <input asp-for="@Model.ProductDetails[2].LanguageId" value="3" type="hidden" />
                    <div class="form-group">
                        <label for="exampleInputUsername1 ">Rusca ad</label>
                        <input class="form-control productName" required asp-for="@Model.ProductDetails[2].Name" placeholder="Başlıq daxil edin">
                        <span asp-validation-for="@Model.ProductDetails[2].Name" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label for="exampleInputUsername1 ">Rusca açıqlama</label>
                        <textarea class="form-control productDescription" id="description2" asp-for="@Model.ProductDetails[2].Description" placeholder="Açıqlama daxil edin"></textarea>
                        <span asp-validation-for="@Model.ProductDetails[2].Description" class="text-danger"></span>
                    </div>


                </div>

                <hr />
                <br />
                <br />


                <div class="form-group">
                    <label for="exampleInputUsername1">Məhsulun kodu</label>
                    <input class="form-control" required asp-for="@Model.Code" placeholder="Kod daxil edin">
                    <span asp-validation-for="@Model.Code" class="text-danger"></span>
                </div>

                <hr />
                <br />
                <br />



                <div class="form-group">
                    <label>Məhsul ölçüləri</label>
                    <div class="productSizesContainer">
                        <partial name="_productCreateSizePartial"></partial>
                    </div>
                    <button type="button" class="btn btn-secondary text-white" id="addProductSize">Yeni ölçü əlavə et</button>
                </div>


                <hr />
                <br />
                <br />




                <div class="form-group">
                    <label>
                        Kateqoriyalar

                    </label>
                    <br />
                    <select class="form-select form-select-sm" asp-for="CategoryId" required>
                        <option value="@null" disabled selected>Kateqori seçin</option>
                        @foreach (var category in Model.Categories ?? new())
                        {
                            <option value="@category.Id">@category.Name</option>
                        }

                    </select>
                </div>

                <hr />
                <br />




                <div class="form-group">
                    <label>
                        Brendlər

                    </label>
                    <br />
                    <select asp-for="BrandId" required class="form-select form-select-sm">
                        <option value="@null" disabled selected>Brend seçin</option>
                        @foreach (var brand in Model.Brands ?? new())
                        {
                            <option value="@brand.Id">@brand.Name</option>
                        }

                    </select>
                </div>

                <hr />
                <br />
                <br />


                <div class="form-group">
                    <label for="exampleInputUsername1">Əsas şəkili seçin</label>
                    <input class="form-control" accept="image/*" asp-for="MainImage">
                    <span asp-validation-for="MainImage" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label for="exampleInputUsername1">Əlavə şəkilləri seçin</label>
                    <input class="form-control" accept="image/*" asp-for="Images">
                    <span asp-validation-for="Images" class="text-danger"></span>
                </div>



                <button type="submit" class="btn btn-primary mr-2">Yarat</button>
                <a class="btn btn-light" asp-action="Index">Ləğv et</a>
            </form>
        </div>
    </div>
</div>
<script>

       let productSizeIndex = 1;
       const addSizeButton = document.querySelector('#addProductSize');
       const sizesContainer = document.querySelector(".productSizesContainer")

       function renderRemoveButtons() {
           const removeButtons = document.querySelectorAll('.remove-product-size');

           removeButtons.forEach((btn, index) => {
               if (index == removeButtons.length - 1) {
                   btn.style.display = "block"
               } else {
                   btn.style.display = "none"

               }
           })
       }

       addSizeButton.addEventListener('click', async () => {


           const response = await fetch(`/Admin/Product/GetSizeView?index=${productSizeIndex}`)

           const htmlData =await response.text();

           sizesContainer.insertAdjacentHTML('beforeend', htmlData);
           productSizeIndex++;

           renderRemoveButtons();

       })


        document.addEventListener('click', function (event) {
        if (event.target.classList.contains('remove-product-size')) {
            event.target.closest('.product-size-group').remove();
            productSizeIndex--;
            renderRemoveButtons();
        }
    });


       const sameDataInput=document.querySelector(".sameDataInput")
       const nameInputs=document.querySelectorAll(".productName");
       //const descriptionInputs=document.querySelectorAll(".productDescription");

       sameDataInput.addEventListener("change",(e)=>{
           e.preventDefault();
           if(sameDataInput.checked){

               let name=nameInputs[0].value;
               //let description=descriptionInputs[0].value;

               nameInputs.forEach(input=>input.value=name)
               //descriptionInputs.forEach(input=>input.value=description)


           }
       })


</script>




@section Scripts {
    <script type="module">
                    import {
            ClassicEditor,
            Essentials,
            Paragraph,
            Bold,
            Italic,
            Font
        } from 'ckeditor5';

        ClassicEditor
            .create(document.querySelector('#description0'), {
                plugins: [Essentials, Paragraph, Bold, Italic, Font],
                toolbar: [
                    'undo', 'redo', '|', 'bold', 'italic', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor'
                ]
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(error => {
                console.error(error);
            });

        ClassicEditor
            .create(document.querySelector('#description1'), {
                plugins: [Essentials, Paragraph, Bold, Italic, Font],
                toolbar: [
                    'undo', 'redo', '|', 'bold', 'italic', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor'
                ]
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(error => {
                console.error(error);
            });


        ClassicEditor
            .create(document.querySelector('#description2'), {
                plugins: [Essentials, Paragraph, Bold, Italic, Font],
                toolbar: [
                    'undo', 'redo', '|', 'bold', 'italic', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor'
                ]
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(error => {
                console.error(error);
            });






    </script>
}