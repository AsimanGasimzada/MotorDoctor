@model ProductUpdateDto

@{
    ViewBag.SizeCount = 0;
}

<style>
    .image-box {
        position: relative;
        display: inline-block;
        border: 2px solid #ccc;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        width: 150px;
        height: 150px;
        padding: 15px;
    }

    .image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
    }

    .close-button {
        position: absolute;
        top: 5px;
        right: 5px;
        background-color: rgba(255, 0, 0, 0.7); /* Şəffaf qırmızı arxa fon */
        color: white;
        border: none;
        border-radius: 50%;
        cursor: pointer;
        font-size: 18px;
        width: 30px; /* "X" düyməsinin genişliyi */
        height: 30px; /* "X" düyməsinin hündürlüyü */
        display: none; /* Başlanğıcda görünməz */
        justify-content: center;
        align-items: center;
        text-align: center;
        transition: background-color 0.3s; /* Hover zamanı arxa fonun dəyişməsi */
    }

    .image-box:hover .close-button {
        display: flex; /* Hover zamanı görünür */
    }

    .close-button:hover {
        background-color: rgba(255, 0, 0, 1); /* Hover zamanı arxa fonu tam qırmızıya çevir */
    }
</style>

<div class="col-md-6 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <p class="card-description">
                Məhsulu dəyişdir
            </p>
            <form method="post" class="forms-sample" enctype="multipart/form-data">

                <div class="text-danger" asp-validation-summary="ModelOnly"></div>

                <div class="form-group">

                    <input asp-for="@Model.ProductDetails[0].LanguageId" value="1" type="hidden" />
                    <div class="form-group">
                        <label for="exampleInputUsername1 ">Azərbaycanca ad</label>
                        <input class="form-control productName" required asp-for="@Model.ProductDetails[0].Name" placeholder="Başlıq daxil edin">
                        <span asp-validation-for="@Model.ProductDetails[0].Name" class="text-danger"></span>
                    </div>


                    <div class="form-group">
                        <label for="exampleInputUsername1 ">Azərbaycanca açıqlama</label>
                        <textarea class="form-control productDescription" id="description0" required asp-for="@Model.ProductDetails[0].Description" placeholder="Açıqlama daxil edin"></textarea>
                        <span asp-validation-for="@Model.ProductDetails[0].Description" class="text-danger"></span>
                    </div>



                
                </div>

                <hr />
                <br />
                <br />

                <div class="form-group">

                    <input asp-for="@Model.ProductDetails[1].LanguageId" value="2" type="hidden" />
                    <div class="form-group">
                        <label for="exampleInputUsername1 ">İngiliscə ad</label>
                        <input class="form-control productName" required asp-for="@Model.ProductDetails[1].Name" placeholder="Başlıq daxil edin">
                        <span asp-validation-for="@Model.ProductDetails[1].Name" class="text-danger"></span>
                    </div>


                    <div class="form-group">
                        <label for="exampleInputUsername1 ">İngiliscə açıqlama</label>
                        <textarea class="form-control productDescription" id="description1" required asp-for="@Model.ProductDetails[1].Description" placeholder="Açıqlama daxil edin"></textarea>
                        <span asp-validation-for="@Model.ProductDetails[1].Description" class="text-danger"></span>
                    </div>


                </div>

                <hr />
                <br />
                <br />

                <div class="form-group">

                    <input asp-for="@Model.ProductDetails[2].LanguageId" value="3" type="hidden" />
                    <div class="form-group">
                        <label for="exampleInputUsername1 ">Rusca ad</label>
                        <input class="form-control productName" required asp-for="@Model.ProductDetails[2].Name" placeholder="Başlıq daxil edin">
                        <span asp-validation-for="@Model.ProductDetails[2].Name" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label for="exampleInputUsername1 ">Rusca açıqlama</label>
                        <textarea class="form-control productDescription" id="description2" required asp-for="@Model.ProductDetails[2].Description" placeholder="Açıqlama daxil edin"></textarea>
                        <span asp-validation-for="@Model.ProductDetails[2].Description" class="text-danger"></span>
                    </div>


                </div>
                

                <hr />
                <br />
                <br />


                <div class="form-group">
                    <label for="exampleInputUsername1">Məhsulun kodu</label>
                    <input class="form-control" required asp-for="@Model.Code" placeholder="Kod daxil edin">
                    <span asp-validation-for="@Model.Code" class="text-danger"></span>
                </div>

                <hr />
                <br />
                <br />



                <div class="form-group">
                    <label>Məhsul ölçüləri</label>
                    <div class="productSizesContainer">
                        @for (int i = 0; i < Model.ProductSizes.Count; i++)
                        {
                            var productSize = Model.ProductSizes[i];

                            <div class="product-size-group" data-index='@i'>

                                <hr />

                                <input asp-for="ProductSizes[i].Id" type="hidden" value="@productSize.Id" />
                                <div class="form-group">
                                    <label>Ölçü</label>
                                    <input class="form-control" asp-for="ProductSizes[i].Size" type="text" required />
                                </div>

                                <div class="form-group">
                                    <label>Qiymət</label>
                                    <input class="form-control" asp-for="ProductSizes[i].Price" type="number" required />
                                </div>

                                <div class="form-group">
                                    <label>Say</label>
                                    <input class="form-control" asp-for="ProductSizes[i].Count" type="number" required />
                                </div>
                                @if (i != 0)
                                {
                                    <button type="button" class="btn btn-danger remove-product-size text-white">Ölçünü sil</button>
                                }

                                <br />
                                <br />
                            </div>
                        }
                    </div>
                    <button type="button" class="btn btn-secondary text-white" id="addProductSize">Yeni ölçü əlavə et</button>
                </div>


                <hr />
                <br />
                <br />




                <div class="form-group">
                    <label>
                        Kateqoriyalar

                    </label>
                    <br />
                    <select class="form-select form-select-sm" asp-for="CategoryId" required>
                        <option value="@null" disabled selected>Kateqori seçin</option>
                        @foreach (var category in Model.Categories ?? new())
                        {
                            <option value="@category.Id">@category.Name</option>
                        }

                    </select>
                </div>

                <hr />
                <br />




                <div class="form-group">
                    <label>
                        Brendlər

                    </label>
                    <br />
                    <select asp-for="BrandId" required class="form-select form-select-sm">
                        <option value="@null" disabled selected>Brend seçin</option>
                        @foreach (var brand in Model.Brands ?? new())
                        {
                            <option value="@brand.Id">@brand.Name</option>
                        }

                    </select>
                </div>

                <hr />
                <br />
                <br />


                <div class="form-group">
                    <label for="exampleInputUsername1">Əsas şəkili seçin</label>
                    <img src="@Model.MainImagePath" width="150" height="150" alt="MainImage" />
                    <input type="hidden" asp-for="MainImagePath" />
                    <input class="form-control" accept="image/*" asp-for="MainImage">
                    <span asp-validation-for="MainImage" class="text-danger"></span>
                </div>



                <div class="form-group">
                    <div class="images">
                        <label for="exampleInputUsername1">İstəmədiyiniz şəkilləri silin</label>
                        <br />
                        @for (int i = 0; i < Model.ImagePaths.Count; i++)
                        {
                            var image = Model.ImagePaths[i];

                            <div class="image-box" id="imageBox">
                                <input type="hidden" asp-for="ImagePaths" value="@image" />
                                <input type="hidden" asp-for="ImageIds" value="@Model.ImageIds[i]" />
                                <img src="@image" alt="Şəkil" class="image">
                                <button class="close-button deleteImageBtn">x</button>
                            </div>
                        }
                        <hr />
                        <br />

                    </div>
                    <label for="exampleInputUsername1">Əlavə şəkilləri seçin</label>
                    <input class="form-control" accept="image/*" asp-for="Images">
                    <span asp-validation-for="Images" class="text-danger"></span>
                </div>



                <button type="submit" class="btn btn-primary mr-2">Dəyişdir</button>
                <a class="btn btn-light" asp-action="Index">Ləğv et</a>
            </form>
        </div>
    </div>
</div>
<script>
    function getProductSizeIndex() {
        const sections = document.querySelectorAll('.product-size-group');


        return parseInt(sections[sections.length - 1].dataset.index);
    }

    const addSizeButton = document.querySelector('#addProductSize');
    const sizesContainer = document.querySelector(".productSizesContainer")
    renderRemoveButtons();

    function renderRemoveButtons() {
        const removeButtons = document.querySelectorAll('.remove-product-size');

        removeButtons.forEach((btn, index) => {
            if (index == removeButtons.length - 1) {
                btn.style.display = "block"
            } else {
                btn.style.display = "none"

            }
        })
    }

    addSizeButton.addEventListener('click', async () => {

        let index = getProductSizeIndex() + 1;
        const response = await fetch(`/Admin/Product/GetSizeView?index=${index}`)

        const htmlData = await response.text();

        sizesContainer.insertAdjacentHTML('beforeend', htmlData);

        renderRemoveButtons();
    })


    document.addEventListener('click', function (event) {
        if (event.target.classList.contains('remove-product-size')) {
            event.target.closest('.product-size-group').remove();
            renderRemoveButtons();
        }
    });

    const deleteImageButtons = document.querySelectorAll('.deleteImageBtn');

    deleteImageButtons.forEach(btn => {
        btn.addEventListener('click', (e) => {
            e.preventDefault();

            btn.parentElement.remove();
        })
    })


</script>




@section Scripts {
    <script type="module">
                    import {
            ClassicEditor,
            Essentials,
            Paragraph,
            Bold,
            Italic,
            Font
        } from 'ckeditor5';

        ClassicEditor
            .create(document.querySelector('#description0'), {
                plugins: [Essentials, Paragraph, Bold, Italic, Font],
                toolbar: [
                    'undo', 'redo', '|', 'bold', 'italic', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor'
                ]
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(error => {
                console.error(error);
            });

        ClassicEditor
            .create(document.querySelector('#description1'), {
                plugins: [Essentials, Paragraph, Bold, Italic, Font],
                toolbar: [
                    'undo', 'redo', '|', 'bold', 'italic', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor'
                ]
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(error => {
                console.error(error);
            });


        ClassicEditor
            .create(document.querySelector('#description2'), {
                plugins: [Essentials, Paragraph, Bold, Italic, Font],
                toolbar: [
                    'undo', 'redo', '|', 'bold', 'italic', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor'
                ]
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(error => {
                console.error(error);
            });






    </script>
}